from fastapi import APIRouter, Depends
from sqlalchemy.orm import Session
from app.auth import get_db
from app.models import Task, User
from app.responses import success_response, created_response, not_found_response
from app.telegram import send_telegram_message

router = APIRouter()

@router.get("/")
def get_tasks(db: Session = Depends(get_db)):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á"""
    tasks = db.query(Task).all()
    return success_response(
        data=[{"id": task.id, "title": task.title, "status": task.status} for task in tasks],
        message="–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"
    )

@router.post("/")
def create_task(title: str, user_id: int, db: Session = Depends(get_db)):
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"""
    user = db.query(User).filter(User.id == user_id).first()
    if not user:
        return not_found_response("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")

    task = Task(title=title, user_id=user_id)
    db.add(task)
    db.commit()
    db.refresh(task)

    if user.telegram_id:
        send_telegram_message(user.telegram_id, f"üìù –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞: {title}")

    return created_response(
        data={"id": task.id, "title": task.title},
        message="–ó–∞–¥–∞—á–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"
    )

@router.put("/{task_id}/status")
def update_task_status(task_id: int, status: str, db: Session = Depends(get_db)):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏"""
    task = db.query(Task).filter(Task.id == task_id).first()
    if not task:
        return not_found_response("–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    task.status = status
    db.commit()

    if task.user.telegram_id:
        send_telegram_message(task.user.telegram_id, f"‚úÖ –ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {task.title} ‚Üí {status}")

    return success_response({}, "–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω")
