import { useAuthStore } from "../store/auth";
import { useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import { useFetchUserData } from "../hooks/useFetchUserData";
import TelegramLogin from "../components/TelegramLogin"; // –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å onSuccess
import "../styles/LinkTelegram.css";

export default function LinkTelegram() {
  const telegramId = useAuthStore((state) => state.telegramId);
  const setTelegramId = useAuthStore((state) => state.setTelegramId);
  const navigate = useNavigate();
  const [loading, setLoading] = useState(true);

  useFetchUserData();

  useEffect(() => {
    const timeout = setTimeout(() => setLoading(false), 1000);
    return () => clearTimeout(timeout);
  }, []);

  useEffect(() => {
    if (telegramId) {
      navigate("/dashboard");
    }
  }, [telegramId, navigate]);

  const handleTelegramSuccess = (newTelegramId: string) => {
    setTelegramId(newTelegramId);
    navigate("/dashboard");
  };

  return (
    <div className="link-telegram-container">
      <h2 className="link-telegram-title">üîó –ü—Ä–∏–≤—è–∑–∫–∞ Telegram</h2>
      {loading ? (
        <p className="loading">üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</p>
      ) : telegramId ? (
        <p className="success">‚úÖ Telegram —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω!</p>
      ) : (
        <>
          <p className="error">‚ùå Telegram –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω</p>
          <p className="hint">
            –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>/start</code> –±–æ—Ç—É –≤ Telegram –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥...
          </p>
          <TelegramLogin onSuccess={handleTelegramSuccess} />
        </>
      )}
    </div>
  );
}
